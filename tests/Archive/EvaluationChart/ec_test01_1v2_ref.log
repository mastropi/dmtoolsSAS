12029  libname ec_test "c:\sas\macros\tests\EvaluationChart";
NOTE: Libref EC_TEST was successfully assigned as follows:
      Engine:        V9
      Physical Name: c:\sas\macros\tests\EvaluationChart
12030
12031  options mprint notes;
12032  %EvaluationChart(
12033      tofit_pred(where=(y in (1,2))),
12034      target=y,
12035      score=p1,
12036      by=selected,
12037      event=1,
12038      model=LR,
12039      groups=20,
12040      chart=gains,
12041      plot=1,
12042      pointlabels=0,
12043      points=1,
12044      legend=1,
12045      bands=1,
12046      confidence=0.95,
12047      out=ec_test.ec_test01_1v2_ref,
12048      outstat=ec_test.ec_test01_1v2_ref_stat,
12049      print=1,
12050      log=1
12051  );
MPRINT(SETSASOPTIONS):   options notes;
MPRINT(SETSASOPTIONS):   options label;
MPRINT(EVALUATIONCHART):  ;

EVALUATIONCHART: Macro starts

EVALUATIONCHART: Input parameters:
EVALUATIONCHART: - Input dataset = tofit_pred(where=(y in (1,2)))
EVALUATIONCHART: - target =        y
EVALUATIONCHART: - score =         p1
EVALUATIONCHART: - by =            selected
EVALUATIONCHART: - event =         1
EVALUATIONCHART: - model =         LR
EVALUATIONCHART: - leaf =          leaf
EVALUATIONCHART: - step =          5
EVALUATIONCHART: - groups =        20
EVALUATIONCHART: - percentiles =
EVALUATIONCHART: - chart =         gains
EVALUATIONCHART: - plot =          1
EVALUATIONCHART: - pointlabels =   0
EVALUATIONCHART: - points =        1
EVALUATIONCHART: - bands =         1
EVALUATIONCHART: - confidence =    0.95
EVALUATIONCHART: - out =           ec_test.ec_test01_1v2_ref
EVALUATIONCHART: - outstat =       ec_test.ec_test01_1v2_ref_stat
EVALUATIONCHART: - print =         1
EVALUATIONCHART: - log =           1

MPRINT(EVALUATIONCHART):   data _EC_data_(keep=y p1 selected );
MPRINT(EVALUATIONCHART):   set tofit_pred(where=(y in (1,2)));
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2125 observations read from the data set WORK.TOFIT_PRED.
      WHERE y in (1, 2);
NOTE: The data set WORK._EC_DATA_ has 2125 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc freq data=_EC_data_ noprint;
MPRINT(EVALUATIONCHART):   where y ~= .;
MPRINT(EVALUATIONCHART):   tables y / out=_EC_freq_;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2125 observations read from the data set WORK._EC_DATA_.
      WHERE y not = .;
NOTE: The data set WORK._EC_FREQ_ has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   proc sort data=_EC_data_;
MPRINT(EVALUATIONCHART):   by selected;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2125 observations read from the data set WORK._EC_DATA_.
NOTE: The data set WORK._EC_DATA_ has 2125 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc freq data=_EC_data_ noprint;
MPRINT(EVALUATIONCHART):   tables
MPRINT(MAKELIST):   selected
MPRINT(EVALUATIONCHART):   / list out=_EC_freq_;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2125 observations read from the data set WORK._EC_DATA_.
NOTE: The data set WORK._EC_FREQ_ has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   data _EC_data1;
MPRINT(EVALUATIONCHART):   merge _EC_data_ _EC_freq_(in=in2 firstobs=1 obs=1);
MPRINT(EVALUATIONCHART):   by selected;
MPRINT(EVALUATIONCHART):   if in2;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2125 observations read from the data set WORK._EC_DATA_.
NOTE: There were 1 observations read from the data set WORK._EC_FREQ_.
NOTE: The data set WORK._EC_DATA1 has 836 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   data _NULL_;
MPRINT(EVALUATIONCHART):   set _EC_freq_(firstobs=1 obs=1);
MPRINT(EVALUATIONCHART):   call symput('byi',
MPRINT(MAKELIST):   selected
MPRINT(EVALUATIONCHART):  );
MPRINT(EVALUATIONCHART):   run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1:2
NOTE: There were 1 observations read from the data set WORK._EC_FREQ_.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   data _EC_data2;
MPRINT(EVALUATIONCHART):   merge _EC_data_ _EC_freq_(in=in2 firstobs=2 obs=2);
MPRINT(EVALUATIONCHART):   by selected;
MPRINT(EVALUATIONCHART):   if in2;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2125 observations read from the data set WORK._EC_DATA_.
NOTE: There were 1 observations read from the data set WORK._EC_FREQ_.
NOTE: The data set WORK._EC_DATA2 has 1289 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   data _NULL_;
MPRINT(EVALUATIONCHART):   set _EC_freq_(firstobs=2 obs=2);
MPRINT(EVALUATIONCHART):   call symput('byi',
MPRINT(MAKELIST):   selected
MPRINT(EVALUATIONCHART):  );
MPRINT(EVALUATIONCHART):   run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1:2
NOTE: There were 1 observations read from the data set WORK._EC_FREQ_.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   quit;
MPRINT(EVALUATIONCHART):   proc datasets nolist;
MPRINT(EVALUATIONCHART):   delete _EC_Chart_ _EC_KSGini_;
MPRINT(EVALUATIONCHART):   quit;

NOTE: The file WORK._EC_CHART_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK._EC_KSGINI_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc sort data=_EC_data1;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 836 observations read from the data set WORK._EC_DATA1.
NOTE: The data set WORK._EC_DATA1 has 836 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc means data=_EC_data1 n noprint;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   var p1;
MPRINT(EVALUATIONCHART):   output out=_EC_n_(drop=_TYPE_ _FREQ_) n=n;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 836 observations read from the data set WORK._EC_DATA1.
NOTE: The data set WORK._EC_N_ has 2 observations and 2 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   data _EC_KolmogorovBandWidths_;
MPRINT(EVALUATIONCHART):   format confidence percent7.1;
MPRINT(EVALUATIONCHART):   set _EC_n_;
MPRINT(EVALUATIONCHART):   confidence = 0.80;
MPRINT(EVALUATIONCHART):   width = 1.07 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   confidence = 0.90;
MPRINT(EVALUATIONCHART):   width = 1.22 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   confidence = 0.95;
MPRINT(EVALUATIONCHART):   width = 1.36 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   confidence = 0.98;
MPRINT(EVALUATIONCHART):   width = 1.52 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   confidence = 0.99;
MPRINT(EVALUATIONCHART):   width = 1.63 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   keep y confidence width;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2 observations read from the data set WORK._EC_N_.
NOTE: The data set WORK._EC_KOLMOGOROVBANDWIDTHS_ has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc sort data=_EC_data1(where=(y~=. and p1~=.)) out=_EC_data_(keep=y p1 );
MPRINT(EVALUATIONCHART):   by descending p1;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 836 observations read from the data set WORK._EC_DATA1.
      WHERE (y not = .) and (p1 not = .);
NOTE: The data set WORK._EC_DATA_ has 836 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):  ;
MPRINT(GETVARORDER):  ;
MPRINT(GETVARORDER):   proc contents data=_EC_data_ out=_GetVarOrder_pc_(keep=name varnum) noprint;
MPRINT(GETVARORDER):   run;

NOTE: The data set WORK._GETVARORDER_PC_ has 2 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(GETVARORDER):   proc sort data=_GetVarOrder_pc_;
MPRINT(GETVARORDER):   by varnum;
MPRINT(GETVARORDER):   run;

NOTE: There were 2 observations read from the data set WORK._GETVARORDER_PC_.
NOTE: The data set WORK._GETVARORDER_PC_ has 2 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(GETVARORDER):   data _NULL_;
MPRINT(GETVARORDER):   set _GetVarOrder_pc_ end=lastobs;
MPRINT(GETVARORDER):   call symput('__order__' || trim(left(_N_)) , name);
MPRINT(GETVARORDER):   if lastobs then call symput('_nro_vars_' , _N_);
MPRINT(GETVARORDER):   run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1:233   2:44
NOTE: There were 2 observations read from the data set WORK._GETVARORDER_PC_.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(GETVARORDER):   proc datasets nolist;
MPRINT(GETVARORDER):   delete _GetVarOrder_pc_;
MPRINT(GETVARORDER):   quit;

NOTE: Deleting WORK._GETVARORDER_PC_ (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(GETVARORDER):  ;
MPRINT(CATEGORIZE):  ;
MPRINT(CATEGORIZE):   data _Categorize_data_(keep=p1 _categorize_obs_) _Categorize_data_rest_(drop=p1);
MPRINT(CATEGORIZE):   set _EC_data_ end=lastobs;
MPRINT(CATEGORIZE):   _categorize_obs_ = _N_;
MPRINT(CATEGORIZE):   run;

NOTE: There were 836 observations read from the data set WORK._EC_DATA_.
NOTE: The data set WORK._CATEGORIZE_DATA_ has 836 observations and 2 variables.
NOTE: The data set WORK._CATEGORIZE_DATA_REST_ has 836 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):  ;
MPRINT(CATEGORIZE):   proc univariate data=_Categorize_data_ noprint;
MPRINT(CATEGORIZE):   var p1;
MPRINT(CATEGORIZE):   output out=_Categorize_percentiles_ pctlpre=_p1_ pctlpts=5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100
pctlname=P1_ P2_ P3_ P4_ P5_ P6_ P7_ P8_ P9_ P10_ P11_ P12_ P13_ P14_ P15_ P16_ P17_ P18_ P19_ P20_;
MPRINT(CATEGORIZE):   run;

NOTE: The data set WORK._CATEGORIZE_PERCENTILES_ has 1 observations and 20 variables.
NOTE: PROCEDURE UNIVARIATE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):   data _Categorize_data_;
MPRINT(CATEGORIZE):   format y p1;
MPRINT(CATEGORIZE):   set _Categorize_data_;
MPRINT(CATEGORIZE):   set _Categorize_data_rest_;
MPRINT(CATEGORIZE):   if _N_ = 1 then set _Categorize_percentiles_;
MPRINT(CATEGORIZE):   array p1_p{*} _p1_P1_ _p1_P2_ _p1_P3_ _p1_P4_ _p1_P5_ _p1_P6_ _p1_P7_ _p1_P8_ _p1_P9_ _p1_P10_ _p1_P11_ _p1_P12_
_p1_P13_ _p1_P14_ _p1_P15_ _p1_P16_ _p1_P17_ _p1_P18_ _p1_P19_ _p1_P20_;
MPRINT(CATEGORIZE):   select;
MPRINT(CATEGORIZE):   when (p1 = .) p1_quant = 0;
MPRINT(CATEGORIZE):   when (p1 <= p1_p(1)) p1_quant = 1;
MPRINT(CATEGORIZE):   when (p1_p(2-1) < p1 <= p1_p(2)) p1_quant = 2;
MPRINT(CATEGORIZE):   when (p1_p(3-1) < p1 <= p1_p(3)) p1_quant = 3;
MPRINT(CATEGORIZE):   when (p1_p(4-1) < p1 <= p1_p(4)) p1_quant = 4;
MPRINT(CATEGORIZE):   when (p1_p(5-1) < p1 <= p1_p(5)) p1_quant = 5;
MPRINT(CATEGORIZE):   when (p1_p(6-1) < p1 <= p1_p(6)) p1_quant = 6;
MPRINT(CATEGORIZE):   when (p1_p(7-1) < p1 <= p1_p(7)) p1_quant = 7;
MPRINT(CATEGORIZE):   when (p1_p(8-1) < p1 <= p1_p(8)) p1_quant = 8;
MPRINT(CATEGORIZE):   when (p1_p(9-1) < p1 <= p1_p(9)) p1_quant = 9;
MPRINT(CATEGORIZE):   when (p1_p(10-1) < p1 <= p1_p(10)) p1_quant = 10;
MPRINT(CATEGORIZE):   when (p1_p(11-1) < p1 <= p1_p(11)) p1_quant = 11;
MPRINT(CATEGORIZE):   when (p1_p(12-1) < p1 <= p1_p(12)) p1_quant = 12;
MPRINT(CATEGORIZE):   when (p1_p(13-1) < p1 <= p1_p(13)) p1_quant = 13;
MPRINT(CATEGORIZE):   when (p1_p(14-1) < p1 <= p1_p(14)) p1_quant = 14;
MPRINT(CATEGORIZE):   when (p1_p(15-1) < p1 <= p1_p(15)) p1_quant = 15;
MPRINT(CATEGORIZE):   when (p1_p(16-1) < p1 <= p1_p(16)) p1_quant = 16;
MPRINT(CATEGORIZE):   when (p1_p(17-1) < p1 <= p1_p(17)) p1_quant = 17;
MPRINT(CATEGORIZE):   when (p1_p(18-1) < p1 <= p1_p(18)) p1_quant = 18;
MPRINT(CATEGORIZE):   when (p1_p(19-1) < p1 <= p1_p(19)) p1_quant = 19;
MPRINT(CATEGORIZE):   when (p1_p(20-1) < p1 <= p1_p(20)) p1_quant = 20;
MPRINT(CATEGORIZE):   otherwise p1_quant = .;
MPRINT(CATEGORIZE):   end;
MPRINT(CATEGORIZE):   drop _p1_P1_ _p1_P2_ _p1_P3_ _p1_P4_ _p1_P5_ _p1_P6_ _p1_P7_ _p1_P8_ _p1_P9_ _p1_P10_ _p1_P11_ _p1_P12_ _p1_P13_
_p1_P14_ _p1_P15_ _p1_P16_ _p1_P17_ _p1_P18_ _p1_P19_ _p1_P20_;
MPRINT(CATEGORIZE):   run;

NOTE: There were 836 observations read from the data set WORK._CATEGORIZE_DATA_.
NOTE: There were 836 observations read from the data set WORK._CATEGORIZE_DATA_REST_.
NOTE: There were 1 observations read from the data set WORK._CATEGORIZE_PERCENTILES_.
NOTE: The data set WORK._CATEGORIZE_DATA_ has 836 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):   proc sort data=_Categorize_data_;
MPRINT(CATEGORIZE):   by _categorize_obs_;
MPRINT(CATEGORIZE):   run;

NOTE: There were 836 observations read from the data set WORK._CATEGORIZE_DATA_.
NOTE: The data set WORK._CATEGORIZE_DATA_ has 836 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):   data _EC_data_;
MPRINT(CATEGORIZE):   format y p1;
MPRINT(CATEGORIZE):   merge _Categorize_data_rest_ _Categorize_data_;
MPRINT(CATEGORIZE):   by _categorize_obs_;
MPRINT(CATEGORIZE):   drop _categorize_obs_;
MPRINT(CATEGORIZE):   run;

NOTE: There were 836 observations read from the data set WORK._CATEGORIZE_DATA_REST_.
NOTE: There were 836 observations read from the data set WORK._CATEGORIZE_DATA_.
NOTE: The data set WORK._EC_DATA_ has 836 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(CATEGORIZE):   proc datasets nolist;
MPRINT(CATEGORIZE):   delete _Categorize_data_ _Categorize_data_rest_ _Categorize_percentiles_ _Categorize_percentiles_i_
_Categorize_values_;
MPRINT(CATEGORIZE):   quit;

NOTE: The file WORK._CATEGORIZE_PERCENTILES_I_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CATEGORIZE_VALUES_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._CATEGORIZE_DATA_ (memtype=DATA).
NOTE: Deleting WORK._CATEGORIZE_DATA_REST_ (memtype=DATA).
NOTE: Deleting WORK._CATEGORIZE_PERCENTILES_ (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):  ;
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   proc freq data=_EC_data_ noprint;
MPRINT(EVALUATIONCHART):   tables y / out=_EC_hits_total_(rename=(COUNT=TotalHits) drop=PERCENT);
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 836 observations read from the data set WORK._EC_DATA_.
NOTE: The data set WORK._EC_HITS_TOTAL_ has 2 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(MEANS):   options nonotes;
MPRINT(MEANS):   data _Means_data_(keep= TotalHits );
MPRINT(MEANS):   set _EC_hits_total_;
MPRINT(MEANS):   run;
MPRINT(MEANS):   options NOTES;
MPRINT(MEANS):   proc means data=_Means_data_ sum noprint;
MPRINT(MEANS):   ;
MPRINT(MEANS):   ;
MPRINT(MEANS):   ;
MPRINT(MEANS):   ;
MPRINT(MEANS):   var TotalHits;
MPRINT(MEANS):   ;
MPRINT(MEANS):   output out=_EC_hits_total_sum_( drop=_TYPE_ _FREQ_) sum=TotalN / ;
MPRINT(MEANS):   run;

NOTE: There were 2 observations read from the data set WORK._MEANS_DATA_.
NOTE: The data set WORK._EC_HITS_TOTAL_SUM_ has 1 observations and 1 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(MEANS):   options nonotes;
MPRINT(MEANS):   proc datasets nolist;
MPRINT(MEANS):   delete _Means_data_ _Means_out_ _Means_contents_;
MPRINT(MEANS):   quit;
MPRINT(MEANS):   options NOTES;
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   data _EC_hits_total_;
MPRINT(EVALUATIONCHART):   format TotalHits TotalN;
MPRINT(EVALUATIONCHART):   if _N_ = 1 then set _EC_hits_total_sum_;
MPRINT(EVALUATIONCHART):   set _EC_hits_total_;
MPRINT(EVALUATIONCHART):   where y = 1;
MPRINT(EVALUATIONCHART):   drop y;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1 observations read from the data set WORK._EC_HITS_TOTAL_SUM_.
NOTE: There were 1 observations read from the data set WORK._EC_HITS_TOTAL_.
      WHERE y=1;
NOTE: The data set WORK._EC_HITS_TOTAL_ has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc freq data=_EC_data_ noprint;
MPRINT(EVALUATIONCHART):   by descending p1_quant;
MPRINT(EVALUATIONCHART):   tables y / out=_EC_hits_(rename=(COUNT=hits) drop=PERCENT);
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 836 observations read from the data set WORK._EC_DATA_.
NOTE: The data set WORK._EC_HITS_ has 40 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(MEANS):   options nonotes;
MPRINT(MEANS):   data _Means_data_(keep=p1_quant hits );
MPRINT(MEANS):   set _EC_hits_;
MPRINT(MEANS):   run;
MPRINT(MEANS):   proc sort data=_Means_data_;
MPRINT(MEANS):   by descending p1_quant;
MPRINT(MEANS):   run;
MPRINT(MEANS):   options NOTES;
MPRINT(MEANS):   proc means data=_Means_data_ sum noprint;
MPRINT(MEANS):   ;
MPRINT(MEANS):   by descending p1_quant;
MPRINT(MEANS):   ;
MPRINT(MEANS):   ;
MPRINT(MEANS):   var hits;
MPRINT(MEANS):   ;
MPRINT(MEANS):   output out=_EC_hits_sum_( drop=_TYPE_ _FREQ_) sum=n / ;
MPRINT(MEANS):   run;

NOTE: There were 40 observations read from the data set WORK._MEANS_DATA_.
NOTE: The data set WORK._EC_HITS_SUM_ has 20 observations and 2 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(MEANS):   options nonotes;
MPRINT(MEANS):   proc datasets nolist;
MPRINT(MEANS):   delete _Means_data_ _Means_out_ _Means_contents_;
MPRINT(MEANS):   quit;
MPRINT(MEANS):   options NOTES;
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   data _EC_Chart_i_;
MPRINT(EVALUATIONCHART):   length model $100 type $2;
MPRINT(EVALUATIONCHART):   format idModel model p1_quant _LEAF_;
MPRINT(EVALUATIONCHART):   format y;
MPRINT(EVALUATIONCHART):   format quantile percent7.1;
MPRINT(EVALUATIONCHART):   format quantile_id;
MPRINT(EVALUATIONCHART):   format Lift;
MPRINT(EVALUATIONCHART):   format GainsEvent GainsNonEvent percent7.1;
MPRINT(EVALUATIONCHART):   format GainsEventLower GainsEventUpper percent7.1;
MPRINT(EVALUATIONCHART):   format GainsNonEventLower GainsNonEventUpper percent7.1;
MPRINT(EVALUATIONCHART):   format Naive percent7.1;
MPRINT(EVALUATIONCHART):   format hits n CumHits CumN TotalHits TotalN;
MPRINT(EVALUATIONCHART):   retain model "TOFIT_PRED (SELECTED=0)";
MPRINT(EVALUATIONCHART):   retain _LEAF_ .;
MPRINT(EVALUATIONCHART):   retain type "LR";
MPRINT(EVALUATIONCHART):   retain idModel 1;
MPRINT(EVALUATIONCHART):   retain y 1;
MPRINT(EVALUATIONCHART):   retain quantile_id;
MPRINT(EVALUATIONCHART):   retain CumHits 0;
MPRINT(EVALUATIONCHART):   retain CumN 0;
MPRINT(EVALUATIONCHART):   if _N_ = 1 then do;
MPRINT(EVALUATIONCHART):   set _EC_hits_total_;
MPRINT(EVALUATIONCHART):   p1_quant = 20 + 1;
MPRINT(EVALUATIONCHART):   quantile = 0;
MPRINT(EVALUATIONCHART):   quantile_id = 1;
MPRINT(EVALUATIONCHART):   Lift = .;
MPRINT(EVALUATIONCHART):   GainsEvent = 0;
MPRINT(EVALUATIONCHART):   GainsNonEvent = 0;
MPRINT(EVALUATIONCHART):   hits = 0;
MPRINT(EVALUATIONCHART):   n = 0;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   merge _EC_hits_(where=(y=1) in=in1) _EC_hits_sum_(keep=p1_quant n);
MPRINT(EVALUATIONCHART):   by descending p1_quant;
MPRINT(EVALUATIONCHART):   if ~in1 then do;
MPRINT(EVALUATIONCHART):   hits = 0;
MPRINT(EVALUATIONCHART):   y = 1;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   quantile_id = quantile_id + 1;
MPRINT(EVALUATIONCHART):   CumHits = CumHits + hits;
MPRINT(EVALUATIONCHART):   CumN = CumN + n;
MPRINT(EVALUATIONCHART):   quantile = CumN/TotalN;
MPRINT(EVALUATIONCHART):   Lift = (CumHits/CumN) / (TotalHits/TotalN);
MPRINT(EVALUATIONCHART):   GainsEvent = CumHits/TotalHits;
MPRINT(EVALUATIONCHART):   GainsNonEvent = (CumN - CumHits) / (TotalN - TotalHits);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   run;

NOTE: Variable GainsEventLower is uninitialized.
NOTE: Variable GainsEventUpper is uninitialized.
NOTE: Variable GainsNonEventLower is uninitialized.
NOTE: Variable GainsNonEventUpper is uninitialized.
NOTE: Variable Naive is uninitialized.
NOTE: There were 1 observations read from the data set WORK._EC_HITS_TOTAL_.
NOTE: There were 20 observations read from the data set WORK._EC_HITS_.
      WHERE y=1;
NOTE: There were 20 observations read from the data set WORK._EC_HITS_SUM_.
NOTE: The data set WORK._EC_CHART_I_ has 21 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc sort data=_EC_Chart_i_;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 21 observations read from the data set WORK._EC_CHART_I_.
NOTE: The data set WORK._EC_CHART_I_ has 21 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc rank data=_EC_data_ out=_EC_data_rank_ descending fraction;
MPRINT(EVALUATIONCHART):   ranks quantile;
MPRINT(EVALUATIONCHART):   var p1;
MPRINT(EVALUATIONCHART):   run;

NOTE: The data set WORK._EC_DATA_RANK_ has 836 observations and 4 variables.
NOTE: PROCEDURE RANK used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc sort data=_EC_data_rank_;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 836 observations read from the data set WORK._EC_DATA_RANK_.
NOTE: The data set WORK._EC_DATA_RANK_ has 836 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc lifetest data=_EC_data_rank_ outsurv=_EC_data_surv_ alpha=0.05 noprint;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   time quantile;
MPRINT(EVALUATIONCHART):   run;

NOTE: The LOGLOG transform is used to compute the confidence limits for the survivor function. To suppress using this transform, specify
      CONFTYPE=LINEAR in the PROC SURVIVAL statement.
NOTE: The data set WORK._EC_DATA_SURV_ has 838 observations and 6 variables.
NOTE: PROCEDURE LIFETEST used (Total process time):
      real time           0.36 seconds
      cpu time            0.14 seconds


MPRINT(PRINTNAMELIST):  ;
MPRINT(PRINTNAMELIST):   data _EC_data_percentiles_;
MPRINT(PRINTNAMELIST):   length name 5;
MPRINT(PRINTNAMELIST):   name = 5;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 10;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 15;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 20;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 25;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 30;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 35;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 40;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 45;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 50;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 55;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 60;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 65;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 70;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 75;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 80;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 85;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 90;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 95;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 100;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   run;

NOTE: The data set WORK._EC_DATA_PERCENTILES_ has 20 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(PRINTNAMELIST):   proc sort data=_EC_data_percentiles_;
MPRINT(PRINTNAMELIST):   by name;
MPRINT(PRINTNAMELIST):   run;

NOTE: There were 20 observations read from the data set WORK._EC_DATA_PERCENTILES_.
NOTE: The data set WORK._EC_DATA_PERCENTILES_ has 20 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(PRINTNAMELIST):   proc transpose data=_EC_data_percentiles_ out=_EC_data_percentiles_(drop=_NAME_) prefix=name;
MPRINT(PRINTNAMELIST):   var name;
MPRINT(PRINTNAMELIST):   run;

NOTE: There were 20 observations read from the data set WORK._EC_DATA_PERCENTILES_.
NOTE: The data set WORK._EC_DATA_PERCENTILES_ has 1 observations and 20 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(PRINTNAMELIST):   proc datasets nolist;
MPRINT(PRINTNAMELIST):   delete _CVL_out_;
MPRINT(PRINTNAMELIST):   quit;

NOTE: The file WORK._CVL_OUT_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(PRINTNAMELIST):  ;
MPRINT(CREATEVARFROMLIST):  ;
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   data _EC_data_surv_;
MPRINT(EVALUATIONCHART):   format y quantile_prev quantile;
MPRINT(EVALUATIONCHART):   if _N_ = 1 then set _EC_data_percentiles_;
MPRINT(EVALUATIONCHART):   set _EC_data_surv_;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   array percentiles{*} name1-name20;
MPRINT(EVALUATIONCHART):   array prev{*} y_prev quantile_prev survival_prev sdf_lcl_prev sdf_ucl_prev;
MPRINT(EVALUATIONCHART):   array current{*} y quantile survival sdf_lcl sdf_ucl;
MPRINT(EVALUATIONCHART):   retain y_prev quantile_prev survival_prev sdf_lcl_prev sdf_ucl_prev;
MPRINT(EVALUATIONCHART):   retain count;
MPRINT(EVALUATIONCHART):   if first.y then do;
MPRINT(EVALUATIONCHART):   count = 1;
MPRINT(EVALUATIONCHART):   y_out = y;
MPRINT(EVALUATIONCHART):   quantile_out = 0;
MPRINT(EVALUATIONCHART):   survival_out = 1;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = 1;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = 1;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else do;
MPRINT(EVALUATIONCHART):   do while(quantile_prev > percentiles(count)/100);
MPRINT(EVALUATIONCHART):   y_out = y_prev;
MPRINT(EVALUATIONCHART):   quantile_out = percentiles(count)/100;
MPRINT(EVALUATIONCHART):   survival_out = survival_prev;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = sdf_lcl_prev;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = sdf_ucl_prev;
MPRINT(EVALUATIONCHART):   count = count + 1;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if percentiles(count)/100 = quantile then do;
MPRINT(EVALUATIONCHART):   y_out = y;
MPRINT(EVALUATIONCHART):   quantile_out = percentiles(count)/100;
MPRINT(EVALUATIONCHART):   survival_out = survival;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = sdf_lcl;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = sdf_ucl;
MPRINT(EVALUATIONCHART):   count = count + 1;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else if quantile_prev <= percentiles(count)/100 < quantile then do;
MPRINT(EVALUATIONCHART):   y_out = y_prev;
MPRINT(EVALUATIONCHART):   quantile_out = percentiles(count)/100;
MPRINT(EVALUATIONCHART):   survival_out = survival_prev;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = sdf_lcl_prev;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = sdf_ucl_prev;
MPRINT(EVALUATIONCHART):   count = count + 1;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if last.y and count < 20 then do;
MPRINT(EVALUATIONCHART):   do i = 1 to 20 - count + 1;
MPRINT(EVALUATIONCHART):   y_out = y_prev;
MPRINT(EVALUATIONCHART):   quantile_out = 1;
MPRINT(EVALUATIONCHART):   survival_out = 0;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = 0;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = 0;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else if last.y and quantile ~= 1 then do;
MPRINT(EVALUATIONCHART):   y_out = y_prev;
MPRINT(EVALUATIONCHART):   quantile_out = 1;
MPRINT(EVALUATIONCHART):   survival_out = 0;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = 0;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = 0;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   do i = 1 to dim(prev);
MPRINT(EVALUATIONCHART):   prev(i) = current(i);
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   drop i count name1-name20 y_prev quantile_prev survival_prev sdf_lcl_prev sdf_ucl_prev y quantile survival
sdf_lcl sdf_ucl;
MPRINT(EVALUATIONCHART):   rename y_out=y quantile_out=quantile survival_out=survival sdf_lcl_out=sdf_lcl sdf_ucl_out=sdf_ucl;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1 observations read from the data set WORK._EC_DATA_PERCENTILES_.
NOTE: There were 838 observations read from the data set WORK._EC_DATA_SURV_.
NOTE: The data set WORK._EC_DATA_SURV_ has 42 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   data _EC_GainsEvent_(keep=quantile quantile_id GainsEventLower GainsEventUpper) _EC_GainsNonEvent_(keep=quantile
quantile_id GainsNonEventLower GainsNonEventUpper);
MPRINT(EVALUATIONCHART):   set _EC_data_surv_;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   retain quantile_id;
MPRINT(EVALUATIONCHART):   cdf = 1 - survival;
MPRINT(EVALUATIONCHART):   cdf_lcl = 1 - sdf_ucl;
MPRINT(EVALUATIONCHART):   cdf_ucl = 1 - sdf_lcl;
MPRINT(EVALUATIONCHART):   if first.y then quantile_id = 0;
MPRINT(EVALUATIONCHART):   if y = 1 then do;
MPRINT(EVALUATIONCHART):   quantile_id = quantile_id + 1;
MPRINT(EVALUATIONCHART):   GainsEvent = cdf;
MPRINT(EVALUATIONCHART):   GainsEventLower = cdf_lcl;
MPRINT(EVALUATIONCHART):   GainsEventUpper = cdf_ucl;
MPRINT(EVALUATIONCHART):   output _EC_GainsEvent_;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else do;
MPRINT(EVALUATIONCHART):   quantile_id = quantile_id + 1;
MPRINT(EVALUATIONCHART):   GainsNonEvent = cdf;
MPRINT(EVALUATIONCHART):   GainsNonEventLower = cdf_lcl;
MPRINT(EVALUATIONCHART):   GainsNonEventUpper = cdf_ucl;
MPRINT(EVALUATIONCHART):   output _EC_GainsNonEvent_;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      1 at 81:50   1 at 81:81
NOTE: There were 42 observations read from the data set WORK._EC_DATA_SURV_.
NOTE: The data set WORK._EC_GAINSEVENT_ has 21 observations and 4 variables.
NOTE: The data set WORK._EC_GAINSNONEVENT_ has 21 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   data _EC_Chart_i_ (drop=KS_max KSLower_max KSUpper_max Gini GiniLower GiniUpper rank rankLower rankUpper)
_EC_KSGini_i_(keep=KS_max KSLower_max KSUpper_max Gini GiniLower GiniUpper rank rankLower rankUpper rename=(KS_max=KS KSLower_max=KSLower
KSUpper_max=KSUpper));
MPRINT(EVALUATIONCHART):   format
MPRINT(INSERTINLIST):   model type idModel p1_quant _LEAF_ y quantile quantile_id Lift GainsEvent GainsNonEvent Naive GainsEventLower
GainsEventUpper GainsNonEventLower GainsNonEventUpper hits n CumHits CumN TotalHits TotalN
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   merge _EC_Chart_i_(in=in1) end=lastobs _EC_GainsEvent_(in=in2) _EC_GainsNonEvent_(in=in3);
MPRINT(EVALUATIONCHART):   by quantile_id;
MPRINT(EVALUATIONCHART):   format KS KSLower KSUpper KS_max KSLower_max KSUpper_max rank rankLower rankUpper Gini GiniLower GiniUpper
percent7.1;
MPRINT(EVALUATIONCHART):   retain KS_max 0;
MPRINT(EVALUATIONCHART):   retain KSLower_max 0;
MPRINT(EVALUATIONCHART):   retain KSUpper_max 0;
MPRINT(EVALUATIONCHART):   retain rank;
MPRINT(EVALUATIONCHART):   retain rankLower;
MPRINT(EVALUATIONCHART):   retain rankUpper;
MPRINT(EVALUATIONCHART):   retain AUC2 0;
MPRINT(EVALUATIONCHART):   retain AUC2Lower 0;
MPRINT(EVALUATIONCHART):   retain AUC2Upper 0;
MPRINT(EVALUATIONCHART):   retain Gini GiniLower GiniUpper;
MPRINT(EVALUATIONCHART):   if in1 and in2 and in3 then do;
MPRINT(EVALUATIONCHART):   KS = abs(GainsEvent - GainsNonEvent);
MPRINT(EVALUATIONCHART):   if GainsEvent > GainsNonEvent then do;
MPRINT(EVALUATIONCHART):   KSLower = GainsEventLower - GainsNonEventUpper;
MPRINT(EVALUATIONCHART):   KSUpper = GainsEventUpper - GainsNonEventLower;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else do;
MPRINT(EVALUATIONCHART):   KSLower = GainsNonEventLower - GainsEventUpper;
MPRINT(EVALUATIONCHART):   KSUpper = GainsNonEventUpper - GainsEventLower;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if KS > KS_max then do;
MPRINT(EVALUATIONCHART):   rank = 1/20*(_N_-1);
MPRINT(EVALUATIONCHART):   KS_max = KS;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if KSLower > KSLower_max then do;
MPRINT(EVALUATIONCHART):   rankUpper = 1/20*(_N_-1);
MPRINT(EVALUATIONCHART):   KSLower_max = KSLower;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if KSUpper > KSUpper_max then do;
MPRINT(EVALUATIONCHART):   rankLower = 1/20*(_N_-1);
MPRINT(EVALUATIONCHART):   KSUpper_max = KSUpper;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   GainsEventLag = lag(GainsEvent);
MPRINT(EVALUATIONCHART):   GainsNonEventLag = lag(GainsNonEvent);
MPRINT(EVALUATIONCHART):   GainsEventLowerLag = lag(GainsEventLower);
MPRINT(EVALUATIONCHART):   GainsNonEventLowerLag = lag(GainsNonEventLower);
MPRINT(EVALUATIONCHART):   GainsEventUpperLag = lag(GainsEventUpper);
MPRINT(EVALUATIONCHART):   GainsNonEventUpperLag = lag(GainsNonEventUpper);
MPRINT(EVALUATIONCHART):   if _N_ > 1 then do;
MPRINT(EVALUATIONCHART):   AUC2 = AUC2 + (GainsEvent + GainsEventLag)*(GainsNonEvent - GainsNonEventLag);
MPRINT(EVALUATIONCHART):   AUC2Lower = AUC2Lower + (GainsEventLower + GainsEventLowerLag)*(GainsNonEventLower - GainsNonEventLowerLag);
MPRINT(EVALUATIONCHART):   AUC2Upper = AUC2Upper + (GainsEventUpper + GainsEventUpperLag)*(GainsNonEventUpper - GainsNonEventUpperLag);
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   Gini = AUC2 - 1;
MPRINT(EVALUATIONCHART):   GiniLower = AUC2Lower - 1;
MPRINT(EVALUATIONCHART):   GiniUpper = AUC2Upper - 1;
MPRINT(EVALUATIONCHART):   drop quantile_id GainsEventLag GainsNonEventLag GainsEventLowerLag GainsNonEventLowerLag GainsEventUpperLag
GainsNonEventUpperLag KS KSLower KSUpper AUC2 AUC2Lower AUC2Upper;
MPRINT(EVALUATIONCHART):   output _EC_Chart_i_;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if lastobs then output _EC_KSGini_i_;
MPRINT(EVALUATIONCHART):   run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      1 at 94:123    1 at 94:187    1 at 99:163    1 at 100:33    1 at 100:181   1 at 100:220
NOTE: There were 21 observations read from the data set WORK._EC_CHART_I_.
NOTE: There were 21 observations read from the data set WORK._EC_GAINSEVENT_.
NOTE: There were 21 observations read from the data set WORK._EC_GAINSNONEVENT_.
NOTE: The data set WORK._EC_CHART_I_ has 21 observations and 21 variables.
NOTE: The data set WORK._EC_KSGINI_I_ has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds


MPRINT(EVALUATIONCHART):   data _EC_KSGini_i_;
MPRINT(EVALUATIONCHART):   length model $100 type $2;
MPRINT(EVALUATIONCHART):   set _EC_KSGini_i_;
MPRINT(EVALUATIONCHART):   model = "TOFIT_PRED (SELECTED=0)";
MPRINT(EVALUATIONCHART):   type = "LR";
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1 observations read from the data set WORK._EC_KSGINI_I_.
NOTE: The data set WORK._EC_KSGINI_I_ has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc append base=_EC_Chart_ data=_EC_Chart_i_ FORCE;
MPRINT(EVALUATIONCHART):   run;

NOTE: Appending WORK._EC_CHART_I_ to WORK._EC_CHART_.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 21 observations read from the data set WORK._EC_CHART_I_.
NOTE: The data set WORK._EC_CHART_ has 21 observations and 21 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc append base=_EC_KSGini_ data=_EC_KSGini_i_ FORCE;
MPRINT(EVALUATIONCHART):   run;

NOTE: Appending WORK._EC_KSGINI_I_ to WORK._EC_KSGINI_.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK._EC_KSGINI_I_.
NOTE: The data set WORK._EC_KSGINI_ has 1 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc sort data=_EC_data2;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1289 observations read from the data set WORK._EC_DATA2.
NOTE: The data set WORK._EC_DATA2 has 1289 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc means data=_EC_data2 n noprint;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   var p1;
MPRINT(EVALUATIONCHART):   output out=_EC_n_(drop=_TYPE_ _FREQ_) n=n;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1289 observations read from the data set WORK._EC_DATA2.
NOTE: The data set WORK._EC_N_ has 2 observations and 2 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   data _EC_KolmogorovBandWidths_;
MPRINT(EVALUATIONCHART):   format confidence percent7.1;
MPRINT(EVALUATIONCHART):   set _EC_n_;
MPRINT(EVALUATIONCHART):   confidence = 0.80;
MPRINT(EVALUATIONCHART):   width = 1.07 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   confidence = 0.90;
MPRINT(EVALUATIONCHART):   width = 1.22 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   confidence = 0.95;
MPRINT(EVALUATIONCHART):   width = 1.36 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   confidence = 0.98;
MPRINT(EVALUATIONCHART):   width = 1.52 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   confidence = 0.99;
MPRINT(EVALUATIONCHART):   width = 1.63 / sqrt(n);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   keep y confidence width;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2 observations read from the data set WORK._EC_N_.
NOTE: The data set WORK._EC_KOLMOGOROVBANDWIDTHS_ has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc sort data=_EC_data2(where=(y~=. and p1~=.)) out=_EC_data_(keep=y p1 );
MPRINT(EVALUATIONCHART):   by descending p1;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1289 observations read from the data set WORK._EC_DATA2.
      WHERE (y not = .) and (p1 not = .);
NOTE: The data set WORK._EC_DATA_ has 1289 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):  ;
MPRINT(GETVARORDER):  ;
MPRINT(GETVARORDER):   proc contents data=_EC_data_ out=_GetVarOrder_pc_(keep=name varnum) noprint;
MPRINT(GETVARORDER):   run;

NOTE: The data set WORK._GETVARORDER_PC_ has 2 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(GETVARORDER):   proc sort data=_GetVarOrder_pc_;
MPRINT(GETVARORDER):   by varnum;
MPRINT(GETVARORDER):   run;

NOTE: There were 2 observations read from the data set WORK._GETVARORDER_PC_.
NOTE: The data set WORK._GETVARORDER_PC_ has 2 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(GETVARORDER):   data _NULL_;
MPRINT(GETVARORDER):   set _GetVarOrder_pc_ end=lastobs;
MPRINT(GETVARORDER):   call symput('__order__' || trim(left(_N_)) , name);
MPRINT(GETVARORDER):   if lastobs then call symput('_nro_vars_' , _N_);
MPRINT(GETVARORDER):   run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1:233   2:44
NOTE: There were 2 observations read from the data set WORK._GETVARORDER_PC_.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(GETVARORDER):   proc datasets nolist;
MPRINT(GETVARORDER):   delete _GetVarOrder_pc_;
MPRINT(GETVARORDER):   quit;

NOTE: Deleting WORK._GETVARORDER_PC_ (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds


MPRINT(GETVARORDER):  ;
MPRINT(CATEGORIZE):  ;
MPRINT(CATEGORIZE):   data _Categorize_data_(keep=p1 _categorize_obs_) _Categorize_data_rest_(drop=p1);
MPRINT(CATEGORIZE):   set _EC_data_ end=lastobs;
MPRINT(CATEGORIZE):   _categorize_obs_ = _N_;
MPRINT(CATEGORIZE):   run;

NOTE: There were 1289 observations read from the data set WORK._EC_DATA_.
NOTE: The data set WORK._CATEGORIZE_DATA_ has 1289 observations and 2 variables.
NOTE: The data set WORK._CATEGORIZE_DATA_REST_ has 1289 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(CATEGORIZE):  ;
MPRINT(CATEGORIZE):   proc univariate data=_Categorize_data_ noprint;
MPRINT(CATEGORIZE):   var p1;
MPRINT(CATEGORIZE):   output out=_Categorize_percentiles_ pctlpre=_p1_ pctlpts=5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100
pctlname=P1_ P2_ P3_ P4_ P5_ P6_ P7_ P8_ P9_ P10_ P11_ P12_ P13_ P14_ P15_ P16_ P17_ P18_ P19_ P20_;
MPRINT(CATEGORIZE):   run;

NOTE: The data set WORK._CATEGORIZE_PERCENTILES_ has 1 observations and 20 variables.
NOTE: PROCEDURE UNIVARIATE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):   data _Categorize_data_;
MPRINT(CATEGORIZE):   format y p1;
MPRINT(CATEGORIZE):   set _Categorize_data_;
MPRINT(CATEGORIZE):   set _Categorize_data_rest_;
MPRINT(CATEGORIZE):   if _N_ = 1 then set _Categorize_percentiles_;
MPRINT(CATEGORIZE):   array p1_p{*} _p1_P1_ _p1_P2_ _p1_P3_ _p1_P4_ _p1_P5_ _p1_P6_ _p1_P7_ _p1_P8_ _p1_P9_ _p1_P10_ _p1_P11_ _p1_P12_
_p1_P13_ _p1_P14_ _p1_P15_ _p1_P16_ _p1_P17_ _p1_P18_ _p1_P19_ _p1_P20_;
MPRINT(CATEGORIZE):   select;
MPRINT(CATEGORIZE):   when (p1 = .) p1_quant = 0;
MPRINT(CATEGORIZE):   when (p1 <= p1_p(1)) p1_quant = 1;
MPRINT(CATEGORIZE):   when (p1_p(2-1) < p1 <= p1_p(2)) p1_quant = 2;
MPRINT(CATEGORIZE):   when (p1_p(3-1) < p1 <= p1_p(3)) p1_quant = 3;
MPRINT(CATEGORIZE):   when (p1_p(4-1) < p1 <= p1_p(4)) p1_quant = 4;
MPRINT(CATEGORIZE):   when (p1_p(5-1) < p1 <= p1_p(5)) p1_quant = 5;
MPRINT(CATEGORIZE):   when (p1_p(6-1) < p1 <= p1_p(6)) p1_quant = 6;
MPRINT(CATEGORIZE):   when (p1_p(7-1) < p1 <= p1_p(7)) p1_quant = 7;
MPRINT(CATEGORIZE):   when (p1_p(8-1) < p1 <= p1_p(8)) p1_quant = 8;
MPRINT(CATEGORIZE):   when (p1_p(9-1) < p1 <= p1_p(9)) p1_quant = 9;
MPRINT(CATEGORIZE):   when (p1_p(10-1) < p1 <= p1_p(10)) p1_quant = 10;
MPRINT(CATEGORIZE):   when (p1_p(11-1) < p1 <= p1_p(11)) p1_quant = 11;
MPRINT(CATEGORIZE):   when (p1_p(12-1) < p1 <= p1_p(12)) p1_quant = 12;
MPRINT(CATEGORIZE):   when (p1_p(13-1) < p1 <= p1_p(13)) p1_quant = 13;
MPRINT(CATEGORIZE):   when (p1_p(14-1) < p1 <= p1_p(14)) p1_quant = 14;
MPRINT(CATEGORIZE):   when (p1_p(15-1) < p1 <= p1_p(15)) p1_quant = 15;
MPRINT(CATEGORIZE):   when (p1_p(16-1) < p1 <= p1_p(16)) p1_quant = 16;
MPRINT(CATEGORIZE):   when (p1_p(17-1) < p1 <= p1_p(17)) p1_quant = 17;
MPRINT(CATEGORIZE):   when (p1_p(18-1) < p1 <= p1_p(18)) p1_quant = 18;
MPRINT(CATEGORIZE):   when (p1_p(19-1) < p1 <= p1_p(19)) p1_quant = 19;
MPRINT(CATEGORIZE):   when (p1_p(20-1) < p1 <= p1_p(20)) p1_quant = 20;
MPRINT(CATEGORIZE):   otherwise p1_quant = .;
MPRINT(CATEGORIZE):   end;
MPRINT(CATEGORIZE):   drop _p1_P1_ _p1_P2_ _p1_P3_ _p1_P4_ _p1_P5_ _p1_P6_ _p1_P7_ _p1_P8_ _p1_P9_ _p1_P10_ _p1_P11_ _p1_P12_ _p1_P13_
_p1_P14_ _p1_P15_ _p1_P16_ _p1_P17_ _p1_P18_ _p1_P19_ _p1_P20_;
MPRINT(CATEGORIZE):   run;

NOTE: There were 1289 observations read from the data set WORK._CATEGORIZE_DATA_.
NOTE: There were 1289 observations read from the data set WORK._CATEGORIZE_DATA_REST_.
NOTE: There were 1 observations read from the data set WORK._CATEGORIZE_PERCENTILES_.
NOTE: The data set WORK._CATEGORIZE_DATA_ has 1289 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds


MPRINT(CATEGORIZE):   proc sort data=_Categorize_data_;
MPRINT(CATEGORIZE):   by _categorize_obs_;
MPRINT(CATEGORIZE):   run;

NOTE: There were 1289 observations read from the data set WORK._CATEGORIZE_DATA_.
NOTE: The data set WORK._CATEGORIZE_DATA_ has 1289 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):   data _EC_data_;
MPRINT(CATEGORIZE):   format y p1;
MPRINT(CATEGORIZE):   merge _Categorize_data_rest_ _Categorize_data_;
MPRINT(CATEGORIZE):   by _categorize_obs_;
MPRINT(CATEGORIZE):   drop _categorize_obs_;
MPRINT(CATEGORIZE):   run;

NOTE: There were 1289 observations read from the data set WORK._CATEGORIZE_DATA_REST_.
NOTE: There were 1289 observations read from the data set WORK._CATEGORIZE_DATA_.
NOTE: The data set WORK._EC_DATA_ has 1289 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(CATEGORIZE):   proc datasets nolist;
MPRINT(CATEGORIZE):   delete _Categorize_data_ _Categorize_data_rest_ _Categorize_percentiles_ _Categorize_percentiles_i_
_Categorize_values_;
MPRINT(CATEGORIZE):   quit;

NOTE: The file WORK._CATEGORIZE_PERCENTILES_I_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CATEGORIZE_VALUES_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._CATEGORIZE_DATA_ (memtype=DATA).
NOTE: Deleting WORK._CATEGORIZE_DATA_REST_ (memtype=DATA).
NOTE: Deleting WORK._CATEGORIZE_PERCENTILES_ (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds


MPRINT(CATEGORIZE):  ;
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   proc freq data=_EC_data_ noprint;
MPRINT(EVALUATIONCHART):   tables y / out=_EC_hits_total_(rename=(COUNT=TotalHits) drop=PERCENT);
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1289 observations read from the data set WORK._EC_DATA_.
NOTE: The data set WORK._EC_HITS_TOTAL_ has 2 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds


MPRINT(MEANS):   options nonotes;
MPRINT(MEANS):   data _Means_data_(keep= TotalHits );
MPRINT(MEANS):   set _EC_hits_total_;
MPRINT(MEANS):   run;
MPRINT(MEANS):   options NOTES;
MPRINT(MEANS):   proc means data=_Means_data_ sum noprint;
MPRINT(MEANS):   ;
MPRINT(MEANS):   ;
MPRINT(MEANS):   ;
MPRINT(MEANS):   ;
MPRINT(MEANS):   var TotalHits;
MPRINT(MEANS):   ;
MPRINT(MEANS):   output out=_EC_hits_total_sum_( drop=_TYPE_ _FREQ_) sum=TotalN / ;
MPRINT(MEANS):   run;

NOTE: There were 2 observations read from the data set WORK._MEANS_DATA_.
NOTE: The data set WORK._EC_HITS_TOTAL_SUM_ has 1 observations and 1 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(MEANS):   options nonotes;
MPRINT(MEANS):   proc datasets nolist;
MPRINT(MEANS):   delete _Means_data_ _Means_out_ _Means_contents_;
MPRINT(MEANS):   quit;
MPRINT(MEANS):   options NOTES;
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   data _EC_hits_total_;
MPRINT(EVALUATIONCHART):   format TotalHits TotalN;
MPRINT(EVALUATIONCHART):   if _N_ = 1 then set _EC_hits_total_sum_;
MPRINT(EVALUATIONCHART):   set _EC_hits_total_;
MPRINT(EVALUATIONCHART):   where y = 1;
MPRINT(EVALUATIONCHART):   drop y;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1 observations read from the data set WORK._EC_HITS_TOTAL_SUM_.
NOTE: There were 1 observations read from the data set WORK._EC_HITS_TOTAL_.
      WHERE y=1;
NOTE: The data set WORK._EC_HITS_TOTAL_ has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc freq data=_EC_data_ noprint;
MPRINT(EVALUATIONCHART):   by descending p1_quant;
MPRINT(EVALUATIONCHART):   tables y / out=_EC_hits_(rename=(COUNT=hits) drop=PERCENT);
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1289 observations read from the data set WORK._EC_DATA_.
NOTE: The data set WORK._EC_HITS_ has 40 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(MEANS):   options nonotes;
MPRINT(MEANS):   data _Means_data_(keep=p1_quant hits );
MPRINT(MEANS):   set _EC_hits_;
MPRINT(MEANS):   run;
MPRINT(MEANS):   proc sort data=_Means_data_;
MPRINT(MEANS):   by descending p1_quant;
MPRINT(MEANS):   run;
MPRINT(MEANS):   options NOTES;
MPRINT(MEANS):   proc means data=_Means_data_ sum noprint;
MPRINT(MEANS):   ;
MPRINT(MEANS):   by descending p1_quant;
MPRINT(MEANS):   ;
MPRINT(MEANS):   ;
MPRINT(MEANS):   var hits;
MPRINT(MEANS):   ;
MPRINT(MEANS):   output out=_EC_hits_sum_( drop=_TYPE_ _FREQ_) sum=n / ;
MPRINT(MEANS):   run;

NOTE: There were 40 observations read from the data set WORK._MEANS_DATA_.
NOTE: The data set WORK._EC_HITS_SUM_ has 20 observations and 2 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds


MPRINT(MEANS):   options nonotes;
MPRINT(MEANS):   proc datasets nolist;
MPRINT(MEANS):   delete _Means_data_ _Means_out_ _Means_contents_;
MPRINT(MEANS):   quit;
MPRINT(MEANS):   options NOTES;
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   data _EC_Chart_i_;
MPRINT(EVALUATIONCHART):   length model $100 type $2;
MPRINT(EVALUATIONCHART):   format idModel model p1_quant _LEAF_;
MPRINT(EVALUATIONCHART):   format y;
MPRINT(EVALUATIONCHART):   format quantile percent7.1;
MPRINT(EVALUATIONCHART):   format quantile_id;
MPRINT(EVALUATIONCHART):   format Lift;
MPRINT(EVALUATIONCHART):   format GainsEvent GainsNonEvent percent7.1;
MPRINT(EVALUATIONCHART):   format GainsEventLower GainsEventUpper percent7.1;
MPRINT(EVALUATIONCHART):   format GainsNonEventLower GainsNonEventUpper percent7.1;
MPRINT(EVALUATIONCHART):   format Naive percent7.1;
MPRINT(EVALUATIONCHART):   format hits n CumHits CumN TotalHits TotalN;
MPRINT(EVALUATIONCHART):   retain model "TOFIT_PRED (SELECTED=1)";
MPRINT(EVALUATIONCHART):   retain _LEAF_ .;
MPRINT(EVALUATIONCHART):   retain type "LR";
MPRINT(EVALUATIONCHART):   retain idModel 2;
MPRINT(EVALUATIONCHART):   retain y 1;
MPRINT(EVALUATIONCHART):   retain quantile_id;
MPRINT(EVALUATIONCHART):   retain CumHits 0;
MPRINT(EVALUATIONCHART):   retain CumN 0;
MPRINT(EVALUATIONCHART):   if _N_ = 1 then do;
MPRINT(EVALUATIONCHART):   set _EC_hits_total_;
MPRINT(EVALUATIONCHART):   p1_quant = 20 + 1;
MPRINT(EVALUATIONCHART):   quantile = 0;
MPRINT(EVALUATIONCHART):   quantile_id = 1;
MPRINT(EVALUATIONCHART):   Lift = .;
MPRINT(EVALUATIONCHART):   GainsEvent = 0;
MPRINT(EVALUATIONCHART):   GainsNonEvent = 0;
MPRINT(EVALUATIONCHART):   hits = 0;
MPRINT(EVALUATIONCHART):   n = 0;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   merge _EC_hits_(where=(y=1) in=in1) _EC_hits_sum_(keep=p1_quant n);
MPRINT(EVALUATIONCHART):   by descending p1_quant;
MPRINT(EVALUATIONCHART):   if ~in1 then do;
MPRINT(EVALUATIONCHART):   hits = 0;
MPRINT(EVALUATIONCHART):   y = 1;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   quantile_id = quantile_id + 1;
MPRINT(EVALUATIONCHART):   CumHits = CumHits + hits;
MPRINT(EVALUATIONCHART):   CumN = CumN + n;
MPRINT(EVALUATIONCHART):   quantile = CumN/TotalN;
MPRINT(EVALUATIONCHART):   Lift = (CumHits/CumN) / (TotalHits/TotalN);
MPRINT(EVALUATIONCHART):   GainsEvent = CumHits/TotalHits;
MPRINT(EVALUATIONCHART):   GainsNonEvent = (CumN - CumHits) / (TotalN - TotalHits);
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   run;

NOTE: Variable GainsEventLower is uninitialized.
NOTE: Variable GainsEventUpper is uninitialized.
NOTE: Variable GainsNonEventLower is uninitialized.
NOTE: Variable GainsNonEventUpper is uninitialized.
NOTE: Variable Naive is uninitialized.
NOTE: There were 1 observations read from the data set WORK._EC_HITS_TOTAL_.
NOTE: There were 20 observations read from the data set WORK._EC_HITS_.
      WHERE y=1;
NOTE: There were 20 observations read from the data set WORK._EC_HITS_SUM_.
NOTE: The data set WORK._EC_CHART_I_ has 21 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc sort data=_EC_Chart_i_;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 21 observations read from the data set WORK._EC_CHART_I_.
NOTE: The data set WORK._EC_CHART_I_ has 21 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc rank data=_EC_data_ out=_EC_data_rank_ descending fraction;
MPRINT(EVALUATIONCHART):   ranks quantile;
MPRINT(EVALUATIONCHART):   var p1;
MPRINT(EVALUATIONCHART):   run;

NOTE: The data set WORK._EC_DATA_RANK_ has 1289 observations and 4 variables.
NOTE: PROCEDURE RANK used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc sort data=_EC_data_rank_;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1289 observations read from the data set WORK._EC_DATA_RANK_.
NOTE: The data set WORK._EC_DATA_RANK_ has 1289 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc lifetest data=_EC_data_rank_ outsurv=_EC_data_surv_ alpha=0.05 noprint;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   time quantile;
MPRINT(EVALUATIONCHART):   run;

NOTE: The LOGLOG transform is used to compute the confidence limits for the survivor function. To suppress using this transform, specify
      CONFTYPE=LINEAR in the PROC SURVIVAL statement.
NOTE: The data set WORK._EC_DATA_SURV_ has 1291 observations and 6 variables.
NOTE: PROCEDURE LIFETEST used (Total process time):
      real time           0.42 seconds
      cpu time            0.12 seconds


MPRINT(PRINTNAMELIST):  ;
MPRINT(PRINTNAMELIST):   data _EC_data_percentiles_;
MPRINT(PRINTNAMELIST):   length name 5;
MPRINT(PRINTNAMELIST):   name = 5;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 10;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 15;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 20;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 25;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 30;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 35;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 40;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 45;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 50;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 55;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 60;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 65;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 70;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 75;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 80;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 85;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 90;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 95;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   name = 100;
MPRINT(PRINTNAMELIST):   output;
MPRINT(PRINTNAMELIST):   run;

NOTE: The data set WORK._EC_DATA_PERCENTILES_ has 20 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(PRINTNAMELIST):   proc sort data=_EC_data_percentiles_;
MPRINT(PRINTNAMELIST):   by name;
MPRINT(PRINTNAMELIST):   run;

NOTE: There were 20 observations read from the data set WORK._EC_DATA_PERCENTILES_.
NOTE: The data set WORK._EC_DATA_PERCENTILES_ has 20 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(PRINTNAMELIST):   proc transpose data=_EC_data_percentiles_ out=_EC_data_percentiles_(drop=_NAME_) prefix=name;
MPRINT(PRINTNAMELIST):   var name;
MPRINT(PRINTNAMELIST):   run;

NOTE: There were 20 observations read from the data set WORK._EC_DATA_PERCENTILES_.
NOTE: The data set WORK._EC_DATA_PERCENTILES_ has 1 observations and 20 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(PRINTNAMELIST):   proc datasets nolist;
MPRINT(PRINTNAMELIST):   delete _CVL_out_;
MPRINT(PRINTNAMELIST):   quit;

NOTE: The file WORK._CVL_OUT_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(PRINTNAMELIST):  ;
MPRINT(CREATEVARFROMLIST):  ;
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   data _EC_data_surv_;
MPRINT(EVALUATIONCHART):   format y quantile_prev quantile;
MPRINT(EVALUATIONCHART):   if _N_ = 1 then set _EC_data_percentiles_;
MPRINT(EVALUATIONCHART):   set _EC_data_surv_;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   array percentiles{*} name1-name20;
MPRINT(EVALUATIONCHART):   array prev{*} y_prev quantile_prev survival_prev sdf_lcl_prev sdf_ucl_prev;
MPRINT(EVALUATIONCHART):   array current{*} y quantile survival sdf_lcl sdf_ucl;
MPRINT(EVALUATIONCHART):   retain y_prev quantile_prev survival_prev sdf_lcl_prev sdf_ucl_prev;
MPRINT(EVALUATIONCHART):   retain count;
MPRINT(EVALUATIONCHART):   if first.y then do;
MPRINT(EVALUATIONCHART):   count = 1;
MPRINT(EVALUATIONCHART):   y_out = y;
MPRINT(EVALUATIONCHART):   quantile_out = 0;
MPRINT(EVALUATIONCHART):   survival_out = 1;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = 1;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = 1;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else do;
MPRINT(EVALUATIONCHART):   do while(quantile_prev > percentiles(count)/100);
MPRINT(EVALUATIONCHART):   y_out = y_prev;
MPRINT(EVALUATIONCHART):   quantile_out = percentiles(count)/100;
MPRINT(EVALUATIONCHART):   survival_out = survival_prev;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = sdf_lcl_prev;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = sdf_ucl_prev;
MPRINT(EVALUATIONCHART):   count = count + 1;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if percentiles(count)/100 = quantile then do;
MPRINT(EVALUATIONCHART):   y_out = y;
MPRINT(EVALUATIONCHART):   quantile_out = percentiles(count)/100;
MPRINT(EVALUATIONCHART):   survival_out = survival;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = sdf_lcl;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = sdf_ucl;
MPRINT(EVALUATIONCHART):   count = count + 1;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else if quantile_prev <= percentiles(count)/100 < quantile then do;
MPRINT(EVALUATIONCHART):   y_out = y_prev;
MPRINT(EVALUATIONCHART):   quantile_out = percentiles(count)/100;
MPRINT(EVALUATIONCHART):   survival_out = survival_prev;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = sdf_lcl_prev;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = sdf_ucl_prev;
MPRINT(EVALUATIONCHART):   count = count + 1;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if last.y and count < 20 then do;
MPRINT(EVALUATIONCHART):   do i = 1 to 20 - count + 1;
MPRINT(EVALUATIONCHART):   y_out = y_prev;
MPRINT(EVALUATIONCHART):   quantile_out = 1;
MPRINT(EVALUATIONCHART):   survival_out = 0;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = 0;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = 0;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else if last.y and quantile ~= 1 then do;
MPRINT(EVALUATIONCHART):   y_out = y_prev;
MPRINT(EVALUATIONCHART):   quantile_out = 1;
MPRINT(EVALUATIONCHART):   survival_out = 0;
MPRINT(EVALUATIONCHART):   sdf_lcl_out = 0;
MPRINT(EVALUATIONCHART):   sdf_ucl_out = 0;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   do i = 1 to dim(prev);
MPRINT(EVALUATIONCHART):   prev(i) = current(i);
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   drop i count name1-name20 y_prev quantile_prev survival_prev sdf_lcl_prev sdf_ucl_prev y quantile survival
sdf_lcl sdf_ucl;
MPRINT(EVALUATIONCHART):   rename y_out=y quantile_out=quantile survival_out=survival sdf_lcl_out=sdf_lcl sdf_ucl_out=sdf_ucl;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1 observations read from the data set WORK._EC_DATA_PERCENTILES_.
NOTE: There were 1291 observations read from the data set WORK._EC_DATA_SURV_.
NOTE: The data set WORK._EC_DATA_SURV_ has 42 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   data _EC_GainsEvent_(keep=quantile quantile_id GainsEventLower GainsEventUpper) _EC_GainsNonEvent_(keep=quantile
quantile_id GainsNonEventLower GainsNonEventUpper);
MPRINT(EVALUATIONCHART):   set _EC_data_surv_;
MPRINT(EVALUATIONCHART):   by y;
MPRINT(EVALUATIONCHART):   retain quantile_id;
MPRINT(EVALUATIONCHART):   cdf = 1 - survival;
MPRINT(EVALUATIONCHART):   cdf_lcl = 1 - sdf_ucl;
MPRINT(EVALUATIONCHART):   cdf_ucl = 1 - sdf_lcl;
MPRINT(EVALUATIONCHART):   if first.y then quantile_id = 0;
MPRINT(EVALUATIONCHART):   if y = 1 then do;
MPRINT(EVALUATIONCHART):   quantile_id = quantile_id + 1;
MPRINT(EVALUATIONCHART):   GainsEvent = cdf;
MPRINT(EVALUATIONCHART):   GainsEventLower = cdf_lcl;
MPRINT(EVALUATIONCHART):   GainsEventUpper = cdf_ucl;
MPRINT(EVALUATIONCHART):   output _EC_GainsEvent_;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else do;
MPRINT(EVALUATIONCHART):   quantile_id = quantile_id + 1;
MPRINT(EVALUATIONCHART):   GainsNonEvent = cdf;
MPRINT(EVALUATIONCHART):   GainsNonEventLower = cdf_lcl;
MPRINT(EVALUATIONCHART):   GainsNonEventUpper = cdf_ucl;
MPRINT(EVALUATIONCHART):   output _EC_GainsNonEvent_;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      1 at 161:50   1 at 161:81
NOTE: There were 42 observations read from the data set WORK._EC_DATA_SURV_.
NOTE: The data set WORK._EC_GAINSEVENT_ has 21 observations and 4 variables.
NOTE: The data set WORK._EC_GAINSNONEVENT_ has 21 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   data _EC_Chart_i_ (drop=KS_max KSLower_max KSUpper_max Gini GiniLower GiniUpper rank rankLower rankUpper)
_EC_KSGini_i_(keep=KS_max KSLower_max KSUpper_max Gini GiniLower GiniUpper rank rankLower rankUpper rename=(KS_max=KS KSLower_max=KSLower
KSUpper_max=KSUpper));
MPRINT(EVALUATIONCHART):   format
MPRINT(INSERTINLIST):   model type idModel p1_quant _LEAF_ y quantile quantile_id Lift GainsEvent GainsNonEvent Naive GainsEventLower
GainsEventUpper GainsNonEventLower GainsNonEventUpper hits n CumHits CumN TotalHits TotalN
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   merge _EC_Chart_i_(in=in1) end=lastobs _EC_GainsEvent_(in=in2) _EC_GainsNonEvent_(in=in3);
MPRINT(EVALUATIONCHART):   by quantile_id;
MPRINT(EVALUATIONCHART):   format KS KSLower KSUpper KS_max KSLower_max KSUpper_max rank rankLower rankUpper Gini GiniLower GiniUpper
percent7.1;
MPRINT(EVALUATIONCHART):   retain KS_max 0;
MPRINT(EVALUATIONCHART):   retain KSLower_max 0;
MPRINT(EVALUATIONCHART):   retain KSUpper_max 0;
MPRINT(EVALUATIONCHART):   retain rank;
MPRINT(EVALUATIONCHART):   retain rankLower;
MPRINT(EVALUATIONCHART):   retain rankUpper;
MPRINT(EVALUATIONCHART):   retain AUC2 0;
MPRINT(EVALUATIONCHART):   retain AUC2Lower 0;
MPRINT(EVALUATIONCHART):   retain AUC2Upper 0;
MPRINT(EVALUATIONCHART):   retain Gini GiniLower GiniUpper;
MPRINT(EVALUATIONCHART):   if in1 and in2 and in3 then do;
MPRINT(EVALUATIONCHART):   KS = abs(GainsEvent - GainsNonEvent);
MPRINT(EVALUATIONCHART):   if GainsEvent > GainsNonEvent then do;
MPRINT(EVALUATIONCHART):   KSLower = GainsEventLower - GainsNonEventUpper;
MPRINT(EVALUATIONCHART):   KSUpper = GainsEventUpper - GainsNonEventLower;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else do;
MPRINT(EVALUATIONCHART):   KSLower = GainsNonEventLower - GainsEventUpper;
MPRINT(EVALUATIONCHART):   KSUpper = GainsNonEventUpper - GainsEventLower;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if KS > KS_max then do;
MPRINT(EVALUATIONCHART):   rank = 1/20*(_N_-1);
MPRINT(EVALUATIONCHART):   KS_max = KS;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if KSLower > KSLower_max then do;
MPRINT(EVALUATIONCHART):   rankUpper = 1/20*(_N_-1);
MPRINT(EVALUATIONCHART):   KSLower_max = KSLower;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if KSUpper > KSUpper_max then do;
MPRINT(EVALUATIONCHART):   rankLower = 1/20*(_N_-1);
MPRINT(EVALUATIONCHART):   KSUpper_max = KSUpper;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   GainsEventLag = lag(GainsEvent);
MPRINT(EVALUATIONCHART):   GainsNonEventLag = lag(GainsNonEvent);
MPRINT(EVALUATIONCHART):   GainsEventLowerLag = lag(GainsEventLower);
MPRINT(EVALUATIONCHART):   GainsNonEventLowerLag = lag(GainsNonEventLower);
MPRINT(EVALUATIONCHART):   GainsEventUpperLag = lag(GainsEventUpper);
MPRINT(EVALUATIONCHART):   GainsNonEventUpperLag = lag(GainsNonEventUpper);
MPRINT(EVALUATIONCHART):   if _N_ > 1 then do;
MPRINT(EVALUATIONCHART):   AUC2 = AUC2 + (GainsEvent + GainsEventLag)*(GainsNonEvent - GainsNonEventLag);
MPRINT(EVALUATIONCHART):   AUC2Lower = AUC2Lower + (GainsEventLower + GainsEventLowerLag)*(GainsNonEventLower - GainsNonEventLowerLag);
MPRINT(EVALUATIONCHART):   AUC2Upper = AUC2Upper + (GainsEventUpper + GainsEventUpperLag)*(GainsNonEventUpper - GainsNonEventUpperLag);
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   Gini = AUC2 - 1;
MPRINT(EVALUATIONCHART):   GiniLower = AUC2Lower - 1;
MPRINT(EVALUATIONCHART):   GiniUpper = AUC2Upper - 1;
MPRINT(EVALUATIONCHART):   drop quantile_id GainsEventLag GainsNonEventLag GainsEventLowerLag GainsNonEventLowerLag GainsEventUpperLag
GainsNonEventUpperLag KS KSLower KSUpper AUC2 AUC2Lower AUC2Upper;
MPRINT(EVALUATIONCHART):   output _EC_Chart_i_;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   if lastobs then output _EC_KSGini_i_;
MPRINT(EVALUATIONCHART):   run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      1 at 174:123   1 at 174:187   1 at 179:163   1 at 180:33    1 at 180:181   1 at 180:220
NOTE: There were 21 observations read from the data set WORK._EC_CHART_I_.
NOTE: There were 21 observations read from the data set WORK._EC_GAINSEVENT_.
NOTE: There were 21 observations read from the data set WORK._EC_GAINSNONEVENT_.
NOTE: The data set WORK._EC_CHART_I_ has 21 observations and 21 variables.
NOTE: The data set WORK._EC_KSGINI_I_ has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds


MPRINT(EVALUATIONCHART):   data _EC_KSGini_i_;
MPRINT(EVALUATIONCHART):   length model $100 type $2;
MPRINT(EVALUATIONCHART):   set _EC_KSGini_i_;
MPRINT(EVALUATIONCHART):   model = "TOFIT_PRED (SELECTED=1)";
MPRINT(EVALUATIONCHART):   type = "LR";
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 1 observations read from the data set WORK._EC_KSGINI_I_.
NOTE: The data set WORK._EC_KSGINI_I_ has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   proc append base=_EC_Chart_ data=_EC_Chart_i_ FORCE;
MPRINT(EVALUATIONCHART):   run;

NOTE: Appending WORK._EC_CHART_I_ to WORK._EC_CHART_.
NOTE: There were 21 observations read from the data set WORK._EC_CHART_I_.
NOTE: 21 observations added.
NOTE: The data set WORK._EC_CHART_ has 42 observations and 21 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc append base=_EC_KSGini_ data=_EC_KSGini_i_ FORCE;
MPRINT(EVALUATIONCHART):   run;

NOTE: Appending WORK._EC_KSGINI_I_ to WORK._EC_KSGINI_.
NOTE: There were 1 observations read from the data set WORK._EC_KSGINI_I_.
NOTE: 1 observations added.
NOTE: The data set WORK._EC_KSGINI_ has 2 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   data _NULL_;
MPRINT(EVALUATIONCHART):   set _EC_hits_total_;
MPRINT(EVALUATIONCHART):   call symput ('TotalHits', TotalHits);
MPRINT(EVALUATIONCHART):   call symput ('TotalN', TotalN);
MPRINT(EVALUATIONCHART):   run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      189:82    189:125
NOTE: There were 1 observations read from the data set WORK._EC_HITS_TOTAL_.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   data _EC_Best_;
MPRINT(EVALUATIONCHART):   length model $100 type $2;
MPRINT(EVALUATIONCHART):   format idModel model;
MPRINT(EVALUATIONCHART):   format p1_quant _LEAF_;
MPRINT(EVALUATIONCHART):   format y quantile Lift;
MPRINT(EVALUATIONCHART):   format GainsEvent GainsNonEvent percent7.1;
MPRINT(EVALUATIONCHART):   format Naive percent7.1;
MPRINT(EVALUATIONCHART):   format hits n CumHits CumN TotalHits TotalN;
MPRINT(EVALUATIONCHART):   retain model "Best";
MPRINT(EVALUATIONCHART):   retain type "";
MPRINT(EVALUATIONCHART):   retain idModel 3;
MPRINT(EVALUATIONCHART):   retain _LEAF_ .;
MPRINT(EVALUATIONCHART):   retain y 1;
MPRINT(EVALUATIONCHART):   retain TotalHits 592;
MPRINT(EVALUATIONCHART):   retain TotalN 1289;
MPRINT(EVALUATIONCHART):   if _N_ = 1 then do;
MPRINT(EVALUATIONCHART):   p1_quant = 20 + 1;
MPRINT(EVALUATIONCHART):   quantile = 0;
MPRINT(EVALUATIONCHART):   Lift = .;
MPRINT(EVALUATIONCHART):   GainsEvent = 0;
MPRINT(EVALUATIONCHART):   GainsNonEvent = 0;
MPRINT(EVALUATIONCHART):   Naive = 0;
MPRINT(EVALUATIONCHART):   hits = 0;
MPRINT(EVALUATIONCHART):   n = 0;
MPRINT(EVALUATIONCHART):   CumHits = 0;
MPRINT(EVALUATIONCHART):   CumN = 0;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   do i = 1 to 20;
MPRINT(EVALUATIONCHART):   p1_quant = 20 - i + 1;
MPRINT(EVALUATIONCHART):   quantile = 1 / 20 * i;
MPRINT(EVALUATIONCHART):   if i < 20 then n = floor(1 / 20 * 1289);
MPRINT(EVALUATIONCHART):   else n = TotalN - CumN;
MPRINT(EVALUATIONCHART):   CumN = floor(i*1 / 20 * 1289);
MPRINT(EVALUATIONCHART):   if CumN <= TotalHits then do;
MPRINT(EVALUATIONCHART):   hits = n;
MPRINT(EVALUATIONCHART):   CumHits = CumN;
MPRINT(EVALUATIONCHART):   Lift = TotalN/TotalHits;
MPRINT(EVALUATIONCHART):   GainsEvent = CumN/TotalHits;
MPRINT(EVALUATIONCHART):   GainsNonEvent = 0;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   else do;
MPRINT(EVALUATIONCHART):   hits = max(0, TotalHits - floor((i-1)*1 / 20 * 1289));
MPRINT(EVALUATIONCHART):   CumHits = TotalHits;
MPRINT(EVALUATIONCHART):   if CumN > TotalN then CumN = TotalN;
MPRINT(EVALUATIONCHART):   Lift = TotalN/CumN;
MPRINT(EVALUATIONCHART):   GainsEvent = 1;
MPRINT(EVALUATIONCHART):   GainsNonEvent = (CumN - TotalHits) / (TotalN - TotalHits);
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   Naive = CumN/TotalN;
MPRINT(EVALUATIONCHART):   output;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   GainsEventLower = .;
MPRINT(EVALUATIONCHART):   GainsEventUpper = .;
MPRINT(EVALUATIONCHART):   GainsNonEventLower = .;
MPRINT(EVALUATIONCHART):   GainsNonEventUpper = .;
MPRINT(EVALUATIONCHART):   drop i;
MPRINT(EVALUATIONCHART):   run;

NOTE: The data set WORK._EC_BEST_ has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   proc append base=_EC_Chart_ data=_EC_Best_ FORCE;
MPRINT(EVALUATIONCHART):   run;

NOTE: Appending WORK._EC_BEST_ to WORK._EC_CHART_.
NOTE: There were 21 observations read from the data set WORK._EC_BEST_.
NOTE: 21 observations added.
NOTE: The data set WORK._EC_CHART_ has 63 observations and 21 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(EVALUATIONCHART):   title2 "KS and Gini Index for";
MPRINT(EVALUATIONCHART):   title3 "Target=Y, Score=P1";
MPRINT(EVALUATIONCHART):   proc print data=_EC_KSGini_;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2 observations read from the data set WORK._EC_KSGINI_.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


MPRINT(EVALUATIONCHART):   title3;
MPRINT(EVALUATIONCHART):   title2;
MPRINT(EVALUATIONCHART):   data ec_test.ec_test01_1v2_ref;
MPRINT(EVALUATIONCHART):   set _EC_Chart_;
MPRINT(EVALUATIONCHART):   rename quantile = p1_quantile;
MPRINT(EVALUATIONCHART):   label model = "Model Name" type = "Model Type (LR, DT)" y = "Event" quantile = "Score Quantile" GainsEvent =
"Gains (y=1)" GainsNonEvent = "Gains (y~=1)" Naive = "Naive 45-degree Line" hits = "Nro. of hits" n = "Nro. of obs" CumHits = "Cumulative
nro. of hits" CumN = "Cumulative nro. of obs" TotalHits = "Total nro. of hits" TotalN = "Total nro. of obs";
MPRINT(EVALUATIONCHART):   drop idModel p1_quant _LEAF_;
MPRINT(EVALUATIONCHART):   label GainsEventLower = "Lower end of the 95% confidence band for Gains (y=1)" GainsEventUpper = "Upper end of
the 95% confidence band for Gains (y=1)" GainsNonEventLower = "Lower end of the 95% confidence band for Gains (y~=1)" GainsNonEventUpper =
"Upper end of the 95% confidence band for Gains (y~=1)";
MPRINT(EVALUATIONCHART):   rename GainsEventLower = GainsEventLower95 GainsEventUpper = GainsEventUpper95 GainsNonEventLower =
GainsNonEventLower95 GainsNonEventUpper = GainsNonEventUpper95;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 63 observations read from the data set WORK._EC_CHART_.
NOTE: The data set EC_TEST.EC_TEST01_1V2_REF has 63 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



EVALUATIONCHART: Output dataset EC_TEST.EC_TEST01_1V2_REF created, with data necessary to produce
EVALUATIONCHART: a LIFT and a GAINS Chart, with confidence bands.
MPRINT(EVALUATIONCHART):   data ec_test.ec_test01_1v2_ref_stat;
MPRINT(EVALUATIONCHART):   set _EC_KSGini_;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 2 observations read from the data set WORK._EC_KSGINI_.
NOTE: The data set EC_TEST.EC_TEST01_1V2_REF_STAT has 2 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



EVALUATIONCHART: Output dataset EC_TEST.EC_TEST01_1V2_REF_STAT created, with the Model KS and Gini Index.
MPRINT(EVALUATIONCHART):   data _EC_Chart_;
MPRINT(EVALUATIONCHART):   set _EC_Chart_;
MPRINT(EVALUATIONCHART):   array vLift{*} Lift1 Lift2 BestLift;
MPRINT(EVALUATIONCHART):   array vGainsEvent{*} GainsEvent1 GainsEvent2 BestGainsEvent;
MPRINT(EVALUATIONCHART):   array vGainsNonEvent{*} GainsNonEvent1 GainsNonEvent2 BestGainsNonEvent;
MPRINT(EVALUATIONCHART):   format GainsEvent1 GainsEvent2 BestGainsEvent GainsNonEvent1 GainsNonEvent2 BestGainsNonEvent percent7.1;
MPRINT(EVALUATIONCHART):   array vGainsEventLower{*} GainsEvent1Lower GainsEvent2Lower;
MPRINT(EVALUATIONCHART):   array vGainsEventUpper{*} GainsEvent1Upper GainsEvent2Upper;
MPRINT(EVALUATIONCHART):   array vGainsNonEventLower{*} GainsNonEvent1Lower GainsNonEvent2Lower;
MPRINT(EVALUATIONCHART):   array vGainsNonEventUpper{*} GainsNonEvent1Upper GainsNonEvent2Upper;
MPRINT(EVALUATIONCHART):   format GainsEvent1Lower GainsEvent2Lower GainsEvent1Upper GainsEvent2Upper GainsNonEvent1Lower
GainsNonEvent2Lower GainsNonEvent1Upper GainsNonEvent2Upper percent7.1;
MPRINT(EVALUATIONCHART):   array vn{*} n1-n3;
MPRINT(EVALUATIONCHART):   vlift(idModel) = Lift;
MPRINT(EVALUATIONCHART):   vGainsEvent(idModel) = GainsEvent;
MPRINT(EVALUATIONCHART):   vGainsNonEvent(idModel) = GainsNonEvent;
MPRINT(EVALUATIONCHART):   if idModel <= 2 then do;
MPRINT(EVALUATIONCHART):   vGainsEventLower(idModel) = GainsEventLower;
MPRINT(EVALUATIONCHART):   vGainsEventUpper(idModel) = GainsEventUpper;
MPRINT(EVALUATIONCHART):   vGainsNonEventLower(idModel) = GainsNonEventLower;
MPRINT(EVALUATIONCHART):   vGainsNonEventUpper(idModel) = GainsNonEventUpper;
MPRINT(EVALUATIONCHART):   end;
MPRINT(EVALUATIONCHART):   vn(idModel) = n;
MPRINT(EVALUATIONCHART):   keep quantile Naive Lift1 Lift2 BestLift GainsEvent1 GainsEvent2 BestGainsEvent GainsNonEvent1 GainsNonEvent2
BestGainsNonEvent GainsEvent1Lower GainsEvent2Lower GainsEvent1Upper GainsEvent2Upper GainsNonEvent1Lower GainsNonEvent2Lower
GainsNonEvent1Upper GainsNonEvent2Upper n1-n3;
MPRINT(EVALUATIONCHART):   run;

NOTE: There were 63 observations read from the data set WORK._EC_CHART_.
NOTE: The data set WORK._EC_CHART_ has 63 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds


MPRINT(DEFINESYMBOLS):   symbol1 color=blue value=dot interpol=none height=0.7 pointlabel=none;
symbol1 color=blue value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol2 color=red value=dot interpol=none height=0.7 pointlabel=none;
symbol2 color=red value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol3 color=green value=dot interpol=none height=0.7 pointlabel=none;
symbol3 color=green value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol4 color=cyan value=dot interpol=none height=0.7 pointlabel=none;
symbol4 color=cyan value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol5 color=olive value=dot interpol=none height=0.7 pointlabel=none;
symbol5 color=olive value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol6 color=yellow value=dot interpol=none height=0.7 pointlabel=none;
symbol6 color=yellow value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol7 color=violet value=dot interpol=none height=0.7 pointlabel=none;
symbol7 color=violet value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol8 color=gr value=dot interpol=none height=0.7 pointlabel=none;
symbol8 color=gr value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol9 color=o value=dot interpol=none height=0.7 pointlabel=none;
symbol9 color=o value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol10 color=salmon value=dot interpol=none height=0.7 pointlabel=none;
symbol10 color=salmon value=dot interpol=none height=0.7 pointlabel=none
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   symbol1 color=blue value=none line=2 interpol=join;
MPRINT(EVALUATIONCHART):   symbol2 color=red value=dot line=1 width=2 interpol=join;
MPRINT(EVALUATIONCHART):   symbol3 color=green value=dot line=1 width=2 interpol=join;
MPRINT(EVALUATIONCHART):   symbol4 color=cyan value=dot line=1 width=2 interpol=join;
MPRINT(EVALUATIONCHART):   symbol5 color=olive value=dot line=1 width=2 interpol=join;
MPRINT(EVALUATIONCHART):   symbol6 color=green value=star line=1 width=1 interpol=join;
MPRINT(EVALUATIONCHART):   symbol7 color=yellow value=star line=1 width=1 interpol=join;
MPRINT(EVALUATIONCHART):   symbol8 color=red value=none line=2 width=1 interpol=join;
MPRINT(EVALUATIONCHART):   symbol9 color=green value=none line=2 width=1 interpol=join;
MPRINT(EVALUATIONCHART):   symbol10 color=cyan value=none line=2 width=1 interpol=join;
MPRINT(EVALUATIONCHART):   symbol11 color=olive value=none line=2 width=1 interpol=join;
MPRINT(EVALUATIONCHART):   axis1 label=("Percentile");
MPRINT(EVALUATIONCHART):   axis2 label=(angle=90 "%Captured Response");
MPRINT(EVALUATIONCHART):   legend1 value=( "Gains TOFIT_PRED (Y=1; selected=0)" "Gains TOFIT_PRED (Y~=1; selected=0)"
MPRINT(REP):   "95% Lower/Upper Bound" "95% Lower/Upper Bound" "95% Lower/Upper Bound" "95% Lower/Upper Bound"
MPRINT(EVALUATIONCHART):   "Gains TOFIT_PRED (Y=1; selected=1)" "Gains TOFIT_PRED (Y~=1; selected=1)"
MPRINT(REP):   "95% Lower/Upper Bound" "95% Lower/Upper Bound" "95% Lower/Upper Bound" "95% Lower/Upper Bound"
MPRINT(EVALUATIONCHART):   "Best (Y=1)" "Best (Y~=1)" "Naive");
MPRINT(EVALUATIONCHART):   title1 "Gains Charts";
MPRINT(EVALUATIONCHART):   title2 "Target = Y, Score = p1, Event = 1";
MPRINT(EVALUATIONCHART):   proc gplot data=_EC_Chart_;
MPRINT(EVALUATIONCHART):   plot GainsEvent1*quantile=2 GainsNonEvent1*quantile=3 GainsEvent1Lower*quantile=8 GainsEvent1Upper*quantile=8
GainsNonEvent1Lower*quantile=9 GainsNonEvent1Upper*quantile=9 GainsEvent2*quantile=4 GainsNonEvent2*quantile=5 GainsEvent2Lower*quantile=10
GainsEvent2Upper*quantile=10 GainsNonEvent2Lower*quantile=11 GainsNonEvent2Upper*quantile=11 BestGainsEvent*quantile=6
BestGainsNonEvent*quantile=7 Naive*quantile=1 / overlay haxis=axis1 vaxis=axis2 legend=legend1 grid;
MPRINT(EVALUATIONCHART):   run;

NOTE: 42 observation(s) contained a MISSING value for the GainsEvent1 * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the GainsNonEvent1 * quantile request.
NOTE: 43 observation(s) contained a MISSING value for the GainsEvent1Lower * quantile request.
NOTE: 43 observation(s) contained a MISSING value for the GainsEvent1Upper * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the GainsNonEvent1Lower * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the GainsNonEvent1Upper * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the GainsEvent2 * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the GainsNonEvent2 * quantile request.
NOTE: 43 observation(s) contained a MISSING value for the GainsEvent2Lower * quantile request.
NOTE: 43 observation(s) contained a MISSING value for the GainsEvent2Upper * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the GainsNonEvent2Lower * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the GainsNonEvent2Upper * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the BestGainsEvent * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the BestGainsNonEvent * quantile request.
NOTE: 42 observation(s) contained a MISSING value for the Naive * quantile request.
MPRINT(EVALUATIONCHART):   quit;
NOTE: There were 63 observations read from the data set WORK._EC_CHART_.
NOTE: At least one W.D format was too small for the number to be printed. The decimal may be shifted by the "BEST" format.
NOTE: PROCEDURE GPLOT used (Total process time):
      real time           2.39 seconds
      cpu time            2.01 seconds


MPRINT(EVALUATIONCHART):   title2;
MPRINT(EVALUATIONCHART):   title1;
MPRINT(DEFINESYMBOLS):   symbol1 color=blue value=dot interpol=none height=0.7 pointlabel=none;
symbol1 color=blue value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol2 color=red value=dot interpol=none height=0.7 pointlabel=none;
symbol2 color=red value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol3 color=green value=dot interpol=none height=0.7 pointlabel=none;
symbol3 color=green value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol4 color=cyan value=dot interpol=none height=0.7 pointlabel=none;
symbol4 color=cyan value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol5 color=olive value=dot interpol=none height=0.7 pointlabel=none;
symbol5 color=olive value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol6 color=yellow value=dot interpol=none height=0.7 pointlabel=none;
symbol6 color=yellow value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol7 color=violet value=dot interpol=none height=0.7 pointlabel=none;
symbol7 color=violet value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol8 color=gr value=dot interpol=none height=0.7 pointlabel=none;
symbol8 color=gr value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol9 color=o value=dot interpol=none height=0.7 pointlabel=none;
symbol9 color=o value=dot interpol=none height=0.7 pointlabel=none
MPRINT(DEFINESYMBOLS):   symbol10 color=salmon value=dot interpol=none height=0.7 pointlabel=none;
symbol10 color=salmon value=dot interpol=none height=0.7 pointlabel=none
MPRINT(EVALUATIONCHART):  ;
MPRINT(EVALUATIONCHART):   proc datasets nolist;
MPRINT(EVALUATIONCHART):   delete _EC_Best_ _EC_data_ _EC_data_percentiles_ _EC_data_rank_ _EC_data_surv_ _EC_freq_ _EC_GainsEvent_
_EC_GainsNonEvent_ _EC_hits_ _EC_hits_total_ _EC_hits_total_sum_ _EC_hits_sum_ _EC_KolmogorovBandWidths_ _EC_Chart_ _EC_Chart_i_
_EC_Chart_t_ _EC_KSGini_ _EC_KSGini_i_ _EC_n_ _EC_nodupleaf_ _EC_data1 _EC_data2;
MPRINT(EVALUATIONCHART):   quit;

NOTE: The file WORK._EC_CHART_T_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file WORK._EC_NODUPLEAF_ (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._EC_BEST_ (memtype=DATA).
NOTE: Deleting WORK._EC_DATA_ (memtype=DATA).
NOTE: Deleting WORK._EC_DATA_PERCENTILES_ (memtype=DATA).
NOTE: Deleting WORK._EC_DATA_RANK_ (memtype=DATA).
NOTE: Deleting WORK._EC_DATA_SURV_ (memtype=DATA).
NOTE: Deleting WORK._EC_FREQ_ (memtype=DATA).
NOTE: Deleting WORK._EC_GAINSEVENT_ (memtype=DATA).
NOTE: Deleting WORK._EC_GAINSNONEVENT_ (memtype=DATA).
NOTE: Deleting WORK._EC_HITS_ (memtype=DATA).
NOTE: Deleting WORK._EC_HITS_TOTAL_ (memtype=DATA).
NOTE: Deleting WORK._EC_HITS_TOTAL_SUM_ (memtype=DATA).
NOTE: Deleting WORK._EC_HITS_SUM_ (memtype=DATA).
NOTE: Deleting WORK._EC_KOLMOGOROVBANDWIDTHS_ (memtype=DATA).
NOTE: Deleting WORK._EC_CHART_ (memtype=DATA).
NOTE: Deleting WORK._EC_CHART_I_ (memtype=DATA).
NOTE: Deleting WORK._EC_KSGINI_ (memtype=DATA).
NOTE: Deleting WORK._EC_KSGINI_I_ (memtype=DATA).
NOTE: Deleting WORK._EC_N_ (memtype=DATA).
NOTE: Deleting WORK._EC_DATA1 (memtype=DATA).
NOTE: Deleting WORK._EC_DATA2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds



EVALUATIONCHART: Macro ends

MPRINT(RESETSASOPTIONS):   options NOTES _last_=WORK.TOFIT_PRED LABEL;
MPRINT(RESETSASOPTIONS):   quit;
MPRINT(EVALUATIONCHART):  ;
12052  options nomprint notes;

