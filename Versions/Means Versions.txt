%Means Versions: Descripcion de las diferentes versiones
--------------------------------------------------------
Creado: 22/1/03



V.1.06: 22/1/03 (DM)
	- Se agregaron los parametros stat= y name=, para compatibilizar con que los nombres de los parametros no llevan 's' como en var=. Los parametros stats= y names= se dejaron para que siguieran andando las llamadas anteriores a %Means.

V.1.07: 18/7/03 (DM)
	- Se agrego' el parametro prefix= para poder crear nombres con prefijos conteniendo los estadisticos calculados.

V.1.08: 14/5/04 (DM)
	- Se agregaron los parametros: transpose, namevar y log:
		- Transpose y namevar se usan cuando se desea tener como output dataset una tabla con los resultados como aparece en el output window al ejecutar PROC MEANS. Transpose=1 pide este formato y namevar establece el nombre de la columna con el nombre de las variables a las que se le pidieron los estadisticos.
		- log se usa como siempre para pedir si se muestran los mensajes en el log o no.
		
V.1.09: 21/10/04 (DM)
	- Se agrego' el parametro format=.
	- Se agrego' un KEEP de las variables usadas en el analisis (id, by, var y weight) para que el sort dure menos en caso de que las variables de analisis no sean muchas y las variables en el dataset sean muchas.
		
V.1.10: 16/8/05 (DM)
	- Se agrego' el parametro class= que contiene las variables a usar en un CLASS statement. El CLASS statement permite calcular estadisticos por distintos valores de variables categoricas sin necesidad de sortear el dataset.

V.1.11: 24/7/06 (DM)
	- Se elimino' el parametro WHERE por causar conflicto cuando las variables especificadas en el WHERE no son parte de las variables analizadas listadas en VAR. Toda opcion WHERE tiene que especificarse como opcion del dataset.
	- Agregue' mas informacion en el log y el help.

V.1.12: 17/08/06 (DM)
	- Se agrego' el parsing de las variables especificadas en CLASS y ID por medio de %GetVarList para que puedan especificarse cosas como x1-x3, id--name, etc. (Notar que la version 2.00 de %GetVarList parsea todas estas cosas.)
	Notar que no agregue' el parsing de las variables especificadas en el parametro BY porque como este parametro puede tener un DESCENDING me parece que no tiene sentido parsear ese tipo de strings.

V.1.13: 31/08/06 (DM)
	- Se modifico' la parte de CheckInputParameters para que solamente se haga si no hay opcion RENAME en los data options, porque si es asi seguramente alguna de las variables pasadas en los parametros siguientes (BY, VAR, etc.) no va a ser encontrada. Y es muy dificil definir cual es el nuevo nombre de las variables.

V.1.14: 2011/11/22 (DM)
	- Added flag parameter DROPTYPEFREQ so that the user can specify whether they want to drop the _TYPE_ and _FREQ_ variables from the output dataset.
	By default, the variables are dropped (as was the case until now), so this parameter defaults to 1.

V.1.17: 2017/09/06 (DM)
	- Renamed the OPTIONS= parameter to OPTIONSOUT= because I added a new OPTIONS= parameter used to specify options in the PROC MEANS statement. The need for this came up when computing quantiles on a very large number of cases (context: AFIP), where PROC MEANS suggests using the QMETHOD=P2 option to approximate the quantile and use much less memory.
	(I verified using 'grep -ni "%Means" *.sas' run from a Git Bash on the macros/Compile directory that no calls to the %Means macro are done in other macros by using the older OPTIONS= parameter (now renamed to OPTIONSOUT=))
	- Removed the creation of a copy of the input dataset (done for security reasons to not update the input dataset with e.g. dataset options like KEEP) so that we save time, especially important when processing a large amount of data.

V.1.18: 2017/11/28 (DM)
	- Defined the default value of STAT= as STAT=n nmiss mean stddev cv skewness kurtosis min p1 p5 p10 p25 p50 p75 p90 p95 p99 max.
	The previous default value was STAT=mean but the idea is that the user calls this macro to easily create distributions of variables in a table.
	(I verified using 'grep -ni "%Means" *.sas' run from a Git Bash on the macros/Compile directory that no calls to the %Means macro are done in other macros with no explicit specification of the STAT= parameter (there was actually one call in Mahalanobis.sas that didn't explicitly set that parameter but I simply replaced that call by adding stat=mean))
	- Fixed a bug introduced in version v1.17 when I removed the creation of a copy of the input dataset: the sorting step when BY variables are specified was incorrectly sorting the dataset IN PLACE, which made the dataset be updated when e.g. there were KEEP variables! This is quite dangerous because the input dataset is updated in that case and there could be loss of data!!
	- Added a new parameter SORTINPLACE=0, which optionally requests the sorting process to be done in place (in case the user wants to leverage the call to %Means to sort the dataset.

V.1.19: 2018/01/10 (DM)
	- Two new parameters: CLASS= and TYPES= so that we can run PROC MEANS on CLASS variables (as opposed to BY variables).
	- Changed the default value of the NAME=parameter from 'namevar' to '_var_' in order to avoid the variable containing the variable name in the ouptut dataset when TRANSPOSE=1 from being overridden by e.g. a BY variable called also 'var'!
	I verified that any calls to the %Means macro by other macros work well with this change.
